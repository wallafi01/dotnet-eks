apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  namespace: prod
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo-container
          image: mongo
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "root"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "password"
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
          resources:
            requests:
              cpu: "256m"
              memory: "512Mi"
          # Configuração de logs similar ao CloudWatch
          # Aqui, utiliza-se uma configuração simples para logs padrão do contêiner.
      volumes:
        - name: mongo-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: prod
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  clusterIP: None  # Para que o MongoDB seja acessível dentro do cluster
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service1-deployment
  namespace: prod
  labels:
    app: service1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service1
  template:
    metadata:
      labels:
        app: service1
    spec:
      containers:
        - name: service1-container
          image: 216989136189.dkr.ecr.us-east-1.amazonaws.com/iis-gerfloor-prod:latest
          ports:
            - containerPort: 80
          env:
            - name: MONGODBCONFIG_CONNECTIONSTRING
              value: "mongodb://mongo-service.svc.cluster.local:27017"
            - name: ASPNETCORE_ENVIRONMENT
              value: "Development"
          resources:
            requests:
              cpu: "256m"
              memory: "512Mi"

---
apiVersion: v1
kind: Service
metadata:
  name: service1-service
  namespace: prod
spec:
  selector:
    app: service1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer

